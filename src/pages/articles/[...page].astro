---
import type { GetStaticPaths } from 'astro';

import { getCollection } from 'astro:content';

import ArticleItem from '@/components/article-item.astro';
import BoxContent from '@/components/box/content.astro';
import BoxHeader from '@/components/box/header.astro';
import Box from '@/components/box/index.astro';
import BoxTitle from '@/components/box/title.astro';
import Pagination from '@/components/pagination.astro';
import LinkTag from '@/components/ui/link-tag.astro';
import Pattern from '@/components/ui/pattern.astro';
import PageLayout from '@/layouts/page-layout.astro';
import { SITE } from '@/lib/config';

const articles = await getCollection('blog');
const categories = [...new Set(articles.map((article) => article.data.category))];
const series = [
  ...new Set(
    articles.map((article) => article.data.series).filter((series) => series !== undefined),
  ),
];

export const getStaticPaths = (async ({ paginate }) => {
  const articles = await getCollection('blog', ({ data }) => !data.draft);
  const sortedArticles = articles.sort(
    (a, b) => b.data.pubDatetime.getTime() - a.data.pubDatetime.getTime(),
  );
  return paginate(sortedArticles, { pageSize: SITE.postPerPage });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
---

<PageLayout
  description="Exploring frontend, backend, and full-stack developmen deep dives, series, and hands-on insights."
  title="Software Engineering Notes"
>
  <Pattern />

  <Box>
    <BoxHeader>
      <BoxTitle>Series</BoxTitle>
    </BoxHeader>
    <BoxContent>
      <div class="flex flex-wrap items-center justify-start gap-x-4 gap-y-3">
        {
          series.map((seriesItem) => (
            <LinkTag href={`articles/series/${seriesItem}`} tag={seriesItem} />
          ))
        }
      </div>
    </BoxContent>
  </Box>

  <Pattern />

  <Box>
    <BoxHeader>
      <BoxTitle>Categories</BoxTitle>
    </BoxHeader>
    <BoxContent>
      <div class="flex flex-wrap items-center justify-start gap-x-4 gap-y-3">
        {
          categories.map((category) => (
            <LinkTag href={`articles/categories/${category}`} tag={category} />
          ))
        }
      </div>
    </BoxContent>
  </Box>

  <Pattern />

  <Box>
    <BoxHeader>
      <BoxTitle>Articles</BoxTitle>
    </BoxHeader>
    <div class="flex w-full flex-col items-start justify-start divide-y divide-border">
      {page.data.map((article) => <ArticleItem article={article} />)}
    </div>

    <div class="border-t py-2">
      <Pagination page={page} />
    </div>
  </Box>

  <Pattern />
</PageLayout>
